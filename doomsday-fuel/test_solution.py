import pytest
import solution

test_cases = [
        # 0:
        {
            "id": 0,
            "m": [
                    [0, 2, 1, 0, 0],
                    [0, 0, 0, 3, 4],
                    [0, 0, 0, 0, 0],
                    [0, 0, 0, 0,0 ],
                    [0, 0, 0, 0, 0]
                ],
            "output": [7, 6, 8, 21]
            },
        # 1: one loop at base
        {
            "id": 1,
            "m": [
                    [0, 1, 0, 0, 0, 1],
                    [4, 0, 0, 3, 2, 0],
                    [0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0]
                ],
            "output": [0, 3, 2, 9, 14]
            },
        # 2: one loop at a nested state
        {
            "id": 2,
            "m": [
                    [0, 1, 0, 1, 0, 0, 0],
                    [0, 0, 1, 0, 0, 0, 1],
                    [0, 4, 0, 0, 3, 2, 0],
                    [0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0]
                ],
            "output": [14, 3, 2, 9, 28]
            },
        # 3: revisit node without loop
         {
            "id": 3,
            "m": [
                    [0, 1, 1, 0, 0, 0],
                    [0, 0, 0, 0, 0, 1],
                    [0, 1, 0, 0, 1, 1],
                    [0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0]
                ],
            "output": [0, 1, 5, 6]
            },
        # 4: revisit node without loop and alt loop
         {
            "id": 4,
            "m": [
                    [0, 1, 1, 0, 0, 0],
                    [1, 0, 0, 0, 0, 0],
                    [0, 1, 0, 0, 1, 1],
                    [0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0]
                ],
            "output": [0, 1, 1, 2]

            },
        # 5: more complex with multiple loops
         {
            "id": 5,
            "m": [
                    [0, 1, 1, 0, 0, 0],
                    [0, 0, 0, 1, 0, 0],
                    [0, 1, 0, 0, 1, 1],
                    [1, 0, 1, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0]
                ],
            "output": [1, 1, 2]

            },
        # 6: same as 5 + non-loop termimal
         {
            "id": 6,
            "m": [
                    [0, 1, 1, 0, 0, 0, 1],
                    [0, 0, 0, 1, 0, 0, 0],
                    [0, 1, 0, 0, 1, 1, 0],
                    [1, 0, 1, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0]
                ],
            "output": [1, 1, 2, 4]

            }
        ]

@pytest.mark.parametrize("test",test_cases)
def test_get_state_transitions(test):
    assert test["output"] == solution.solution(test["m"])


